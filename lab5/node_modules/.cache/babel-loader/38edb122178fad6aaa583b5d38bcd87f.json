{"ast":null,"code":"var _jsxFileName = \"/home/bartosz/PIW_Lab/lab5/src/App.js\",\n    _s = $RefreshSig$();\n\nimport AddStudent from './components/AddStudent';\nimport SearchFilter from './components/SearchFilter';\nimport { StudentList } from './components/StudentList';\nimport { useState } from 'react';\nimport React from 'react';\nimport { NumberOfFoundUsers } from './components/NumberOfFoundUsers';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport Navbar from './components/Navbar';\nimport AddProject from './components/AddProject';\nimport { ProjectList } from './components/ProjectList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [filteredStudents, setFilteredStudents] = useState([]);\n  const [favoriteStudents, setFavoriteStudents] = useState([]);\n  const [usersFound, setUsersFound] = useState(0);\n  const [projects, setProjects] = useState([]);\n  const [filteredProjects, setFilteredProjects] = useState([]);\n  const [favoriteProjects, setFavoriteProjects] = useState([]);\n  const [projectsFound, setProjectsFound] = useState(0);\n\n  const addStudent = (name, description, email, tags, isFavorite) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newStudent = {\n      id,\n      name,\n      description,\n      email,\n      tags,\n      isFavorite\n    };\n    setStudents([...students, newStudent]);\n    setFilteredStudents([...filteredStudents, newStudent]);\n    setUsersFound(students.length + 1);\n  };\n\n  const addProject = (organization, name, description, email, tags, isFavorite) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newProject = {\n      id,\n      organization,\n      name,\n      description,\n      email,\n      tags,\n      isFavorite\n    };\n    setProjects([...projects, newProject]);\n    setFilteredProjects([...filteredProjects, newProject]);\n    setProjectsFound(projects.length + 1);\n  };\n\n  const deleteFromFavorites = id => {\n    const result = favoriteStudents.filter(student => student.id !== id && student !== null);\n    setFavoriteStudents(result);\n  };\n\n  const deleteProjectFromFavorites = id => {\n    const result = favoriteProjects.filter(project => project.id !== id && project !== null);\n    setFavoriteProjects(result);\n  };\n\n  const addToFavorites = (name, description, tags, id) => {\n    const newStudent = {\n      id,\n      name,\n      description,\n      tags\n    };\n    setFavoriteStudents([...favoriteStudents, newStudent]);\n  };\n\n  const addProjectToFavorites = (organization, name, description, tags, id) => {\n    const newProject = {\n      id,\n      organization,\n      name,\n      description,\n      tags\n    };\n    setFavoriteProjects([...favoriteProjects, newProject]);\n  };\n\n  const showFavorites = () => {\n    setUsersFound(favoriteStudents.length);\n    setFilteredStudents([...favoriteStudents]);\n  };\n\n  const showFavoritesProjects = () => {\n    setProjectsFound(favoriteProjects.length);\n    setFilteredProjects([...favoriteProjects]);\n  };\n\n  const filter = (enteredDescription, enteredTags) => {\n    if (enteredTags.length > 0) {\n      const result = students.filter(student => {\n        for (var ent in enteredTags) {\n          var isPresent = false;\n\n          for (var tag in student.tags) {\n            if (student.tags[tag] === enteredTags[ent]) {\n              isPresent = true;\n              break;\n            }\n          }\n\n          if (!isPresent) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n      setFilteredStudents(result);\n      setUsersFound(result.length);\n\n      if (enteredDescription !== '') {\n        const newResult = result.filter(item => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({\n          id,\n          name,\n          description,\n          email,\n          tags\n        }) => ({\n          id,\n          name,\n          description,\n          email,\n          tags\n        }));\n        setFilteredStudents(newResult);\n        setUsersFound(newResult.length);\n      }\n    } else if (enteredTags.length === 0 && enteredDescription !== '') {\n      const result = students.filter(item => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({\n        id,\n        name,\n        description,\n        email,\n        tags\n      }) => ({\n        id,\n        name,\n        description,\n        email,\n        tags\n      }));\n      setFilteredStudents(result);\n      setUsersFound(result.length);\n    } else {\n      setFilteredStudents(students);\n      setUsersFound(students.length);\n    }\n  };\n\n  const filterProjects = (enteredDescription, enteredTags) => {\n    if (enteredTags.length > 0) {\n      const result = projects.filter(project => {\n        for (var ent in enteredTags) {\n          var isPresent = false;\n\n          for (var tag in project.tags) {\n            if (project.tags[tag] === enteredTags[ent]) {\n              isPresent = true;\n              break;\n            }\n          }\n\n          if (!isPresent) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n      setFilteredProjects(result);\n      setProjectsFound(result.length);\n\n      if (enteredDescription !== '') {\n        const newResult = result.filter(item => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({\n          id,\n          name,\n          description,\n          email,\n          tags\n        }) => ({\n          id,\n          name,\n          description,\n          email,\n          tags\n        }));\n        setFilteredProjects(newResult);\n        setProjectsFound(newResult.length);\n      }\n    } else if (enteredTags.length === 0 && enteredDescription !== '') {\n      const result = students.filter(item => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({\n        id,\n        name,\n        description,\n        email,\n        tags\n      }) => ({\n        id,\n        name,\n        description,\n        email,\n        tags\n      }));\n      setFilteredProjects(result);\n      setProjectsFound(result.length);\n    } else {\n      setFilteredProjects(projects);\n      setProjectsFound(projects.length);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/studentList\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header\",\n              children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n                filter: filter,\n                showFavorites: showFavorites\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NumberOfFoundUsers, {\n                foundUsers: usersFound\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n              students: filteredStudents,\n              addToFavorites: addToFavorites,\n              deleteFromFavorites: deleteFromFavorites\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/createStudent\",\n            children: /*#__PURE__*/_jsxDEV(AddStudent, {\n              onAdd: addStudent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/createProject\",\n            children: /*#__PURE__*/_jsxDEV(AddProject, {\n              onAdd: addProject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/projectsList>\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header\",\n              children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n                filter: filterProjects,\n                showFavorites: showFavoritesProjects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NumberOfFoundUsers, {\n                foundUsers: projectsFound\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hreuLGN9hBnly+jJomlXh2A6quM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bartosz/PIW_Lab/lab5/src/App.js"],"names":["AddStudent","SearchFilter","StudentList","useState","React","NumberOfFoundUsers","BrowserRouter","Router","Route","Switch","HomePage","Navbar","AddProject","ProjectList","App","students","setStudents","filteredStudents","setFilteredStudents","favoriteStudents","setFavoriteStudents","usersFound","setUsersFound","projects","setProjects","filteredProjects","setFilteredProjects","favoriteProjects","setFavoriteProjects","projectsFound","setProjectsFound","addStudent","name","description","email","tags","isFavorite","id","Math","floor","random","newStudent","length","addProject","organization","newProject","deleteFromFavorites","result","filter","student","deleteProjectFromFavorites","project","addToFavorites","addProjectToFavorites","showFavorites","showFavoritesProjects","enteredDescription","enteredTags","ent","isPresent","tag","newResult","item","toLowerCase","includes","map","filterProjects"],"mappings":"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","sourcesContent":["import AddStudent from './components/AddStudent'\nimport SearchFilter from './components/SearchFilter'\nimport { StudentList } from './components/StudentList'\nimport { useState } from 'react'\nimport React from 'react'\nimport { NumberOfFoundUsers } from './components/NumberOfFoundUsers'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage'\nimport Navbar from './components/Navbar'\nimport AddProject from './components/AddProject'\nimport { ProjectList } from './components/ProjectList'\n\nfunction App() {\n  const [students, setStudents] = useState([])\n  const [filteredStudents, setFilteredStudents] = useState([])\n  const [favoriteStudents, setFavoriteStudents] = useState([])\n  const [usersFound, setUsersFound] = useState(0)\n\n  const [projects, setProjects] = useState([])\n  const [filteredProjects, setFilteredProjects] = useState([])\n  const [favoriteProjects, setFavoriteProjects] = useState([])\n  const [projectsFound, setProjectsFound] = useState(0)\n\n  const addStudent = (name, description, email, tags, isFavorite) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n\n    const newStudent = { id, name, description, email, tags, isFavorite }\n\n    setStudents([...students, newStudent])\n    setFilteredStudents([...filteredStudents, newStudent])\n    setUsersFound(students.length + 1)\n  }\n\n  const addProject = (organization, name, description, email, tags, isFavorite) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n\n    const newProject = { id, organization, name, description, email, tags, isFavorite }\n\n    setProjects([...projects, newProject])\n    setFilteredProjects([...filteredProjects, newProject])\n    setProjectsFound(projects.length + 1)\n  }\n\n  const deleteFromFavorites = (id) => {\n    const result = favoriteStudents.filter((student) => student.id !== id && student !== null)\n    setFavoriteStudents(result)\n  }\n\n  const deleteProjectFromFavorites = (id) => {\n    const result = favoriteProjects.filter((project) => project.id !== id && project !== null)\n    setFavoriteProjects(result)\n  }\n\n  const addToFavorites = (name, description, tags, id) => {\n    const newStudent = { id, name, description, tags }\n    setFavoriteStudents([...favoriteStudents, newStudent])\n  }\n\n  const addProjectToFavorites = (organization, name, description, tags, id) => {\n    const newProject = {id, organization, name, description, tags}\n    setFavoriteProjects([...favoriteProjects, newProject])\n  }\n\n  const showFavorites = () => {\n    setUsersFound(favoriteStudents.length)\n    setFilteredStudents([...favoriteStudents])\n  }\n\n  const showFavoritesProjects = () => {\n    setProjectsFound(favoriteProjects.length)\n    setFilteredProjects([...favoriteProjects])\n  }\n\n  const filter = (enteredDescription, enteredTags) => {\n    if (enteredTags.length > 0) {\n      const result = students.filter((student) => {\n        for (var ent in enteredTags) {\n          var isPresent = false;\n          for (var tag in student.tags) {\n            if (student.tags[tag] === enteredTags[ent]) {\n              isPresent = true;\n              break;\n            }\n          }\n          if (!isPresent) {\n            return false;\n          }\n        }\n        return true;\n      })\n      setFilteredStudents(result)\n      setUsersFound(result.length)\n      if (enteredDescription !== '') {\n        const newResult = result.filter((item) => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({ id, name, description, email, tags }) => ({ id, name, description, email, tags }));\n        setFilteredStudents(newResult)\n        setUsersFound(newResult.length)\n      }\n    }\n    else if (enteredTags.length === 0 && enteredDescription !== '') {\n      const result = students.filter((item) => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({ id, name, description, email, tags }) => ({ id, name, description, email, tags }));\n      setFilteredStudents(result)\n      setUsersFound(result.length)\n    }\n    else {\n      setFilteredStudents(students)\n      setUsersFound(students.length)\n    }\n  }\n\n  const filterProjects = (enteredDescription, enteredTags) => {\n    if (enteredTags.length > 0) {\n      const result = projects.filter((project) => {\n        for (var ent in enteredTags) {\n          var isPresent = false;\n          for (var tag in project.tags) {\n            if (project.tags[tag] === enteredTags[ent]) {\n              isPresent = true;\n              break;\n            }\n          }\n          if (!isPresent) {\n            return false;\n          }\n        }\n        return true;\n      })\n      setFilteredProjects(result)\n      setProjectsFound(result.length)\n      if (enteredDescription !== '') {\n        const newResult = result.filter((item) => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({ id, name, description, email, tags }) => ({ id, name, description, email, tags }));\n        setFilteredProjects(newResult)\n        setProjectsFound(newResult.length)\n      }\n    }\n    else if (enteredTags.length === 0 && enteredDescription !== '') {\n      const result = students.filter((item) => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({ id, name, description, email, tags }) => ({ id, name, description, email, tags }));\n      setFilteredProjects(result)\n      setProjectsFound(result.length)\n    }\n    else {\n      setFilteredProjects(projects)\n      setProjectsFound(projects.length)\n    }\n  }\n\n  return (\n    <Router>\n      <React.StrictMode>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n\n            <Route exact path=\"/studentList\">\n              <div className='header'>\n                <SearchFilter filter={filter} showFavorites={showFavorites} />\n                <NumberOfFoundUsers foundUsers={usersFound} />\n              </div>\n              <StudentList students={filteredStudents} addToFavorites={addToFavorites} deleteFromFavorites={deleteFromFavorites} />\n            </Route>\n\n            <Route exact path=\"/createStudent\">\n              <AddStudent onAdd={addStudent} />\n            </Route>\n\n            <Route exact path=\"/createProject\">\n              <AddProject onAdd={addProject} />\n            </Route>\n\n            <Route exact path=\"/projectsList>\">\n              <div className='header'>\n                <SearchFilter filter={filterProjects} showFavorites={showFavoritesProjects} />\n                <NumberOfFoundUsers foundUsers={projectsFound} />\n              </div>\n              {/* <ProjectList projects={filteredProjects} addToFavorites={addProjectToFavorites} deleteFromFavorites={deleteProjectFromFavorites} /> */}\n            </Route>\n\n          </Switch>\n        </div>\n      </React.StrictMode >\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}