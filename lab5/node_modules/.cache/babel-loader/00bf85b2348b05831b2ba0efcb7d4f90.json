{"ast":null,"code":"var _jsxFileName = \"/home/bartosz/PIW_Lab/lab4/lab4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport AddStudent from './components/AddStudent';\nimport SearchFilter from './components/SearchFilter';\nimport { StudentList } from './components/StudentList';\nimport { useState } from 'react';\nimport { NumberOfFoundUsers } from './components/NumberOfFoundUsers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [filteredStudents, setFilteredStudents] = useState([]);\n  const [favoriteStudents, setFavoriteStudents] = useState([]);\n\n  const addStudent = (name, description, email, tags, isFavorite) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newStudent = {\n      id,\n      name,\n      description,\n      email,\n      tags,\n      isFavorite\n    };\n    setStudents([...students, newStudent]);\n    setFilteredStudents([...filteredStudents, newStudent]);\n  };\n\n  const deleteFromFavorites = id => {\n    setFavoriteStudents([favoriteStudents.filter(student => student.id !== id && student !== null)]);\n  };\n\n  const addToFavorites = (name, description, tags, id) => {\n    const newStudent = {\n      id,\n      name,\n      description,\n      tags\n    };\n    setFavoriteStudents([...favoriteStudents, newStudent]);\n  };\n\n  const showFavorites = () => {\n    console.log('test');\n    setFilteredStudents([...favoriteStudents]);\n  };\n\n  const filter = (enteredDescription, enteredTags) => {\n    if (enteredTags.length > 0) {\n      const result = students.filter(student => {\n        for (var ent in enteredTags) {\n          var isPresent = false;\n\n          for (var tag in student.tags) {\n            if (student.tags[tag] === enteredTags[ent]) {\n              isPresent = true;\n              break;\n            }\n          }\n\n          if (!isPresent) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n      setFilteredStudents(result);\n\n      if (enteredDescription !== '') {\n        const newResult = result.filter(item => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({\n          id,\n          name,\n          description,\n          email,\n          tags\n        }) => ({\n          id,\n          name,\n          description,\n          email,\n          tags\n        }));\n        setFilteredStudents(newResult);\n      }\n    } else if (enteredTags.length === 0 && enteredDescription !== '') {\n      const result = students.filter(item => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({\n        id,\n        name,\n        description,\n        email,\n        tags\n      }) => ({\n        id,\n        name,\n        description,\n        email,\n        tags\n      }));\n      setFilteredStudents(result);\n    } else {\n      setFilteredStudents(students);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n      filter: filter,\n      showFavorites: showFavorites\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddStudent, {\n      onAdd: addStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n      students: filteredStudents,\n      addToFavorites: addToFavorites,\n      deleteFromFavorites: deleteFromFavorites\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumberOfFoundUsers, {\n      foundUsers: filteredStudents.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hEukKPF6t2Crmh/t8OI7hcwv63A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bartosz/PIW_Lab/lab4/lab4/src/App.js"],"names":["AddStudent","SearchFilter","StudentList","useState","NumberOfFoundUsers","App","students","setStudents","filteredStudents","setFilteredStudents","favoriteStudents","setFavoriteStudents","addStudent","name","description","email","tags","isFavorite","id","Math","floor","random","newStudent","deleteFromFavorites","filter","student","addToFavorites","showFavorites","console","log","enteredDescription","enteredTags","length","result","ent","isPresent","tag","newResult","item","toLowerCase","includes","map"],"mappings":"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","sourcesContent":["import AddStudent from './components/AddStudent'\nimport SearchFilter from './components/SearchFilter'\nimport { StudentList } from './components/StudentList'\nimport { useState } from 'react'\nimport { NumberOfFoundUsers } from './components/NumberOfFoundUsers'\n\nfunction App() {\n  const [students, setStudents] = useState([])\n  const [filteredStudents, setFilteredStudents] = useState([])\n  const [favoriteStudents, setFavoriteStudents] = useState([])\n\n  const addStudent = (name, description, email, tags, isFavorite) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n\n    const newStudent = { id, name, description, email, tags, isFavorite}\n\n    setStudents([...students, newStudent])\n    setFilteredStudents([...filteredStudents, newStudent])\n  }\n\n  const deleteFromFavorites = (id) => {\n    \n    setFavoriteStudents([favoriteStudents.filter((student) => student.id !== id && student !== null)])\n  }\n\n  const addToFavorites = (name, description, tags, id) => {      \n    const newStudent = { id, name, description, tags}   \n    setFavoriteStudents([...favoriteStudents, newStudent])    \n  }\n\n  const showFavorites = () => {\n    console.log('test')\n    setFilteredStudents([...favoriteStudents])\n  }\n\n  const filter = (enteredDescription, enteredTags) => {\n    if (enteredTags.length > 0) {\n      const result = students.filter((student) => {\n        for (var ent in enteredTags) {\n          var isPresent = false;\n          for (var tag in student.tags) {\n            if (student.tags[tag] === enteredTags[ent]) {\n              isPresent = true;\n              break;\n            }\n          }\n          if (!isPresent) {\n            return false;\n          }\n        }\n        return true;\n      })\n      setFilteredStudents(result)\n      if (enteredDescription !== '') {        \n        const newResult = result.filter((item) => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({ id, name, description, email, tags }) => ({ id, name, description, email, tags }));\n        setFilteredStudents(newResult)\n      }\n    }\n    else if (enteredTags.length === 0 && enteredDescription !== '') {      \n      const result = students.filter((item) => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({ id, name, description, email, tags }) => ({ id, name, description, email, tags }));\n      setFilteredStudents(result)\n    }\n    else{\n      setFilteredStudents(students)\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchFilter filter={filter} showFavorites={showFavorites} />\n      <AddStudent onAdd={addStudent} />\n      <StudentList students={filteredStudents} addToFavorites={addToFavorites} deleteFromFavorites={deleteFromFavorites} />\n      <NumberOfFoundUsers foundUsers={filteredStudents.length} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}