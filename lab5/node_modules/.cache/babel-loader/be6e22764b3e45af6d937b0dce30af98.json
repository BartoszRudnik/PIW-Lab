{"ast":null,"code":"var _jsxFileName = \"/home/bartosz/PIW_Lab/lab5/src/App.js\",\n    _s = $RefreshSig$();\n\nimport AddStudent from './components/AddStudent';\nimport SearchFilter from './components/SearchFilter';\nimport { StudentList } from './components/StudentList';\nimport { useState } from 'react';\nimport React from 'react';\nimport { NumberOfFoundUsers } from './components/NumberOfFoundUsers';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport Navbar from './components/Navbar';\nimport AddProject from './components/AddProject';\nimport { ProjectList } from './components/ProjectList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [filteredStudents, setFilteredStudents] = useState([]);\n  const [favoriteStudents, setFavoriteStudents] = useState([]);\n  const [usersFound, setUsersFound] = useState(0);\n  const [projects, setProjects] = useState([]);\n  const [filteredProjects, setFilteredProjects] = useState([]);\n  const [favoriteProjects, setFavoriteProjects] = useState([]);\n  const [projectsFound, setProjectsFound] = useState(0);\n\n  const addStudent = (name, description, email, tags, isFavorite) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newStudent = {\n      id,\n      name,\n      description,\n      email,\n      tags,\n      isFavorite\n    };\n    setStudents([...students, newStudent]);\n    setFilteredStudents([...filteredStudents, newStudent]);\n    setUsersFound(students.length + 1);\n  };\n\n  const editStudent = (id, name, description, tags) => {\n    const index = students.findIndex(student => student.id === id);\n    var studentCopy = [...students];\n    var studentToEdit = students.find(student => student.id === id);\n    studentToEdit.name = name;\n    studentToEdit.description = description;\n    studentToEdit.tags = tags;\n    studentCopy[index] = studentToEdit;\n    setStudents([...studentCopy]);\n  };\n\n  const editProject = (id, organization, name, description, tags) => {\n    const index = projects.findIndex(project => project.id === id);\n    var projectCopy = [...projects];\n    var projectToEdit = projects.find(project => project.id === id);\n    projectToEdit.organization = organization;\n    projectToEdit.name = name;\n    projectToEdit.description = description;\n    projectToEdit.tags = tags;\n    projectCopy[index] = projectToEdit;\n    setProjects([...projectCopy]);\n  };\n\n  const addProject = (organization, name, description, email, tags, isFavorite) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newProject = {\n      id,\n      organization,\n      name,\n      description,\n      email,\n      tags,\n      isFavorite\n    };\n    setProjects([...projects, newProject]);\n    setFilteredProjects([...filteredProjects, newProject]);\n    setProjectsFound(projects.length + 1);\n  };\n\n  const deleteFromFavorites = id => {\n    const result = favoriteStudents.filter(student => student.id !== id && student !== null);\n    setFavoriteStudents(result);\n  };\n\n  const deleteProjectFromFavorites = id => {\n    const result = favoriteProjects.filter(project => project.id !== id && project !== null);\n    setFavoriteProjects(result);\n  };\n\n  const addToFavorites = (name, description, tags, id) => {\n    const newStudent = {\n      id,\n      name,\n      description,\n      tags\n    };\n    setFavoriteStudents([...favoriteStudents, newStudent]);\n  };\n\n  const addProjectToFavorites = (organization, name, description, tags, id) => {\n    const newProject = {\n      id,\n      organization,\n      name,\n      description,\n      tags\n    };\n    setFavoriteProjects([...favoriteProjects, newProject]);\n  };\n\n  const showFavorites = () => {\n    setUsersFound(favoriteStudents.length);\n    setFilteredStudents([...favoriteStudents]);\n  };\n\n  const showFavoritesProjects = () => {\n    setProjectsFound(favoriteProjects.length);\n    setFilteredProjects([...favoriteProjects]);\n  };\n\n  const filter = (enteredDescription, enteredTags) => {\n    if (enteredTags.length > 0) {\n      const result = students.filter(student => {\n        for (var ent in enteredTags) {\n          var isPresent = false;\n\n          for (var tag in student.tags) {\n            if (student.tags[tag] === enteredTags[ent]) {\n              isPresent = true;\n              break;\n            }\n          }\n\n          if (!isPresent) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n      setFilteredStudents(result);\n      setUsersFound(result.length);\n\n      if (enteredDescription !== '') {\n        const newResult = result.filter(item => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({\n          id,\n          name,\n          description,\n          email,\n          tags\n        }) => ({\n          id,\n          name,\n          description,\n          email,\n          tags\n        }));\n        setFilteredStudents(newResult);\n        setUsersFound(newResult.length);\n      }\n    } else if (enteredTags.length === 0 && enteredDescription !== '') {\n      const result = students.filter(item => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({\n        id,\n        name,\n        description,\n        email,\n        tags\n      }) => ({\n        id,\n        name,\n        description,\n        email,\n        tags\n      }));\n      setFilteredStudents(result);\n      setUsersFound(result.length);\n    } else {\n      setFilteredStudents(students);\n      setUsersFound(students.length);\n    }\n  };\n\n  const filterProjects = (enteredDescription, enteredTags) => {\n    if (enteredTags.length > 0) {\n      const result = projects.filter(project => {\n        for (var ent in enteredTags) {\n          var isPresent = false;\n\n          for (var tag in project.tags) {\n            if (project.tags[tag] === enteredTags[ent]) {\n              isPresent = true;\n              break;\n            }\n          }\n\n          if (!isPresent) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n      setFilteredProjects(result);\n      setProjectsFound(result.length);\n\n      if (enteredDescription !== '') {\n        const newResult = result.filter(item => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({\n          id,\n          organization,\n          name,\n          description,\n          email,\n          tags\n        }) => ({\n          id,\n          organization,\n          name,\n          description,\n          email,\n          tags\n        }));\n        setFilteredProjects(newResult);\n        setProjectsFound(newResult.length);\n      }\n    } else if (enteredTags.length === 0 && enteredDescription !== '') {\n      const result = projects.filter(item => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({\n        id,\n        organization,\n        name,\n        description,\n        email,\n        tags\n      }) => ({\n        id,\n        organization,\n        name,\n        description,\n        email,\n        tags\n      }));\n      setFilteredProjects(result);\n      setProjectsFound(result.length);\n    } else {\n      setFilteredProjects(projects);\n      setProjectsFound(projects.length);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/studentList\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header\",\n              children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n                filter: filter,\n                showFavorites: showFavorites\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NumberOfFoundUsers, {\n                foundUsers: usersFound\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n              students: filteredStudents,\n              addToFavorites: addToFavorites,\n              deleteFromFavorites: deleteFromFavorites,\n              editStudent: editStudent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/createStudent\",\n            children: /*#__PURE__*/_jsxDEV(AddStudent, {\n              onAdd: addStudent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/createProject\",\n            children: /*#__PURE__*/_jsxDEV(AddProject, {\n              onAdd: addProject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/projectsList\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header\",\n              children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n                filter: filterProjects,\n                showFavorites: showFavoritesProjects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NumberOfFoundUsers, {\n                foundUsers: projectsFound\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n              projects: filteredProjects,\n              addToFavorites: addProjectToFavorites,\n              deleteFromFavorites: deleteProjectFromFavorites,\n              editProject: editProject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hreuLGN9hBnly+jJomlXh2A6quM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bartosz/PIW_Lab/lab5/src/App.js"],"names":["AddStudent","SearchFilter","StudentList","useState","React","NumberOfFoundUsers","BrowserRouter","Router","Route","Switch","HomePage","Navbar","AddProject","ProjectList","App","students","setStudents","filteredStudents","setFilteredStudents","favoriteStudents","setFavoriteStudents","usersFound","setUsersFound","projects","setProjects","filteredProjects","setFilteredProjects","favoriteProjects","setFavoriteProjects","projectsFound","setProjectsFound","addStudent","name","description","email","tags","isFavorite","id","Math","floor","random","newStudent","length","editStudent","index","findIndex","student","studentCopy","studentToEdit","find","editProject","organization","project","projectCopy","projectToEdit","addProject","newProject","deleteFromFavorites","result","filter","deleteProjectFromFavorites","addToFavorites","addProjectToFavorites","showFavorites","showFavoritesProjects","enteredDescription","enteredTags","ent","isPresent","tag","newResult","item","toLowerCase","includes","map","filterProjects"],"mappings":"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","sourcesContent":["import AddStudent from './components/AddStudent'\nimport SearchFilter from './components/SearchFilter'\nimport { StudentList } from './components/StudentList'\nimport { useState } from 'react'\nimport React from 'react'\nimport { NumberOfFoundUsers } from './components/NumberOfFoundUsers'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage'\nimport Navbar from './components/Navbar'\nimport AddProject from './components/AddProject'\nimport { ProjectList } from './components/ProjectList'\n\nfunction App() {\n  const [students, setStudents] = useState([])\n  const [filteredStudents, setFilteredStudents] = useState([])\n  const [favoriteStudents, setFavoriteStudents] = useState([])\n  const [usersFound, setUsersFound] = useState(0)\n\n  const [projects, setProjects] = useState([])\n  const [filteredProjects, setFilteredProjects] = useState([])\n  const [favoriteProjects, setFavoriteProjects] = useState([])\n  const [projectsFound, setProjectsFound] = useState(0)\n\n  const addStudent = (name, description, email, tags, isFavorite) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n\n    const newStudent = { id, name, description, email, tags, isFavorite }\n\n    setStudents([...students, newStudent])\n    setFilteredStudents([...filteredStudents, newStudent])\n    setUsersFound(students.length + 1)\n  }\n\n  const editStudent = (id, name, description, tags) => {\n\n    const index = students.findIndex((student) => student.id === id);\n    var studentCopy = [...students];\n\n    var studentToEdit = students.find((student) => student.id === id);\n    studentToEdit.name = name;\n    studentToEdit.description = description;\n    studentToEdit.tags = tags;\n\n    studentCopy[index] = studentToEdit;\n\n    setStudents([...studentCopy]);\n\n  }\n\n  const editProject = (id, organization, name, description, tags) => {\n\n    const index = projects.findIndex((project) => project.id === id);\n    var projectCopy = [...projects];\n\n    var projectToEdit = projects.find((project) => project.id === id);\n    projectToEdit.organization = organization;\n    projectToEdit.name = name;\n    projectToEdit.description = description;\n    projectToEdit.tags = tags;\n\n    projectCopy[index] = projectToEdit;\n\n    setProjects([...projectCopy]);\n\n  }\n\n  const addProject = (organization, name, description, email, tags, isFavorite) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n\n    const newProject = { id, organization, name, description, email, tags, isFavorite }\n\n    setProjects([...projects, newProject])\n    setFilteredProjects([...filteredProjects, newProject])\n    setProjectsFound(projects.length + 1)\n  }\n\n  const deleteFromFavorites = (id) => {\n    const result = favoriteStudents.filter((student) => student.id !== id && student !== null)\n    setFavoriteStudents(result)\n  }\n\n  const deleteProjectFromFavorites = (id) => {\n    const result = favoriteProjects.filter((project) => project.id !== id && project !== null)\n    setFavoriteProjects(result)\n  }\n\n  const addToFavorites = (name, description, tags, id) => {\n    const newStudent = { id, name, description, tags }\n    setFavoriteStudents([...favoriteStudents, newStudent])\n  }\n\n  const addProjectToFavorites = (organization, name, description, tags, id) => {\n    const newProject = { id, organization, name, description, tags }\n    setFavoriteProjects([...favoriteProjects, newProject])\n  }\n\n  const showFavorites = () => {\n    setUsersFound(favoriteStudents.length)\n    setFilteredStudents([...favoriteStudents])\n  }\n\n  const showFavoritesProjects = () => {\n    setProjectsFound(favoriteProjects.length)\n    setFilteredProjects([...favoriteProjects])\n  }\n\n  const filter = (enteredDescription, enteredTags) => {\n    if (enteredTags.length > 0) {\n      const result = students.filter((student) => {\n        for (var ent in enteredTags) {\n          var isPresent = false;\n          for (var tag in student.tags) {\n            if (student.tags[tag] === enteredTags[ent]) {\n              isPresent = true;\n              break;\n            }\n          }\n          if (!isPresent) {\n            return false;\n          }\n        }\n        return true;\n      })\n      setFilteredStudents(result)\n      setUsersFound(result.length)\n      if (enteredDescription !== '') {\n        const newResult = result.filter((item) => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({ id, name, description, email, tags }) => ({ id, name, description, email, tags }));\n        setFilteredStudents(newResult)\n        setUsersFound(newResult.length)\n      }\n    }\n    else if (enteredTags.length === 0 && enteredDescription !== '') {\n      const result = students.filter((item) => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({ id, name, description, email, tags }) => ({ id, name, description, email, tags }));\n      setFilteredStudents(result)\n      setUsersFound(result.length)\n    }\n    else {\n      setFilteredStudents(students)\n      setUsersFound(students.length)\n    }\n  }\n\n  const filterProjects = (enteredDescription, enteredTags) => {\n    if (enteredTags.length > 0) {\n      const result = projects.filter((project) => {\n        for (var ent in enteredTags) {\n          var isPresent = false;\n          for (var tag in project.tags) {\n            if (project.tags[tag] === enteredTags[ent]) {\n              isPresent = true;\n              break;\n            }\n          }\n          if (!isPresent) {\n            return false;\n          }\n        }\n        return true;\n      })\n      setFilteredProjects(result)\n      setProjectsFound(result.length)\n      if (enteredDescription !== '') {\n        const newResult = result.filter((item) => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({ id, organization, name, description, email, tags }) => ({ id, organization, name, description, email, tags }));\n        setFilteredProjects(newResult)\n        setProjectsFound(newResult.length)\n      }\n    }\n    else if (enteredTags.length === 0 && enteredDescription !== '') {\n      const result = projects.filter((item) => item.description.toLowerCase().includes(enteredDescription.toLowerCase())).map(({ id, organization, name, description, email, tags }) => ({ id, organization, name, description, email, tags }));\n      setFilteredProjects(result)\n      setProjectsFound(result.length)\n    }\n    else {\n      setFilteredProjects(projects)\n      setProjectsFound(projects.length)\n    }\n  }\n\n  return (\n    <Router>\n      <React.StrictMode>\n        <div className=\"App\">          \n          <Navbar />\n          <Switch>\n\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n\n\n            <Route exact path=\"/studentList\">\n              <div className='header'>\n                <SearchFilter filter={filter} showFavorites={showFavorites} />\n                <NumberOfFoundUsers foundUsers={usersFound} />\n              </div>\n              <StudentList students={filteredStudents} addToFavorites={addToFavorites} deleteFromFavorites={deleteFromFavorites} editStudent={editStudent} />\n            </Route>\n\n            <Route exact path=\"/createStudent\">\n              <AddStudent onAdd={addStudent} />\n            </Route>\n\n            <Route exact path=\"/createProject\">\n              <AddProject onAdd={addProject} />\n            </Route>\n\n            <Route exact path=\"/projectsList\">\n              <div className='header'>\n                <SearchFilter filter={filterProjects} showFavorites={showFavoritesProjects} />\n                <NumberOfFoundUsers foundUsers={projectsFound} />\n              </div>\n              <ProjectList projects={filteredProjects} addToFavorites={addProjectToFavorites} deleteFromFavorites={deleteProjectFromFavorites} editProject={editProject} />\n            </Route>\n\n          </Switch>\n        </div>\n      </React.StrictMode >\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}