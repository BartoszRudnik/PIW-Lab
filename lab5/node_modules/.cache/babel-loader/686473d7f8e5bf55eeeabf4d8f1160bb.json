{"ast":null,"code":"var _jsxFileName = \"/home/bartosz/PIW_Lab/lab4/lab4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport AddStudent from './components/AddStudent';\nimport SearchFilter from './components/SearchFilter';\nimport { StudentList } from './components/StudentList';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [filteredStudents, setFilteredStudents] = useState([]);\n\n  const addStudent = (name, description, email, tags) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newStudent = {\n      id,\n      name,\n      description,\n      email,\n      tags\n    };\n    setStudents([...students, newStudent]);\n  };\n\n  const filterStudentsByTag = () => {};\n\n  const filterStudentsByDescription = enteredText => {\n    if (enteredText) {\n      setFilteredStudents(students.filter(item => item.description.includes(enteredText)).map(({\n        id,\n        name,\n        description,\n        email,\n        tags\n      }) => ({\n        id,\n        name,\n        description,\n        email,\n        tags\n      })));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n      updateByDescription: filterStudentsByDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddStudent, {\n      onAdd: addStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudentList, {\n      students: students\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"V2xTSyDp2Qyg3SPUAvsF+T4fjaM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bartosz/PIW_Lab/lab4/lab4/src/App.js"],"names":["AddStudent","SearchFilter","StudentList","useState","App","students","setStudents","filteredStudents","setFilteredStudents","addStudent","name","description","email","tags","id","Math","floor","random","newStudent","filterStudentsByTag","filterStudentsByDescription","enteredText","filter","item","includes","map"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,EAAD,CAAxD;;AAEA,QAAMM,UAAU,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoBC,KAApB,EAA2BC,IAA3B,KAAmC;AACpD,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AAEA,UAAMC,UAAU,GAAG;AAACJ,MAAAA,EAAD;AAAKJ,MAAAA,IAAL;AAAWC,MAAAA,WAAX;AAAwBC,MAAAA,KAAxB;AAA+BC,MAAAA;AAA/B,KAAnB;AAEAP,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAca,UAAd,CAAD,CAAX;AACD,GAND;;AAQA,QAAMC,mBAAmB,GAAG,MAAK,CAIhC,CAJD;;AAMA,QAAMC,2BAA2B,GAAIC,WAAD,IAAgB;AAElD,QAAGA,WAAH,EAAe;AACfb,MAAAA,mBAAmB,CAACH,QAAQ,CAACiB,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACZ,WAAL,CAAiBa,QAAjB,CAA0BH,WAA1B,CAA1B,EAAkEI,GAAlE,CAAsE,CAAC;AAACX,QAAAA,EAAD;AAAKJ,QAAAA,IAAL;AAAWC,QAAAA,WAAX;AAAwBC,QAAAA,KAAxB;AAA+BC,QAAAA;AAA/B,OAAD,MAA2C;AAACC,QAAAA,EAAD;AAAKJ,QAAAA,IAAL;AAAWC,QAAAA,WAAX;AAAwBC,QAAAA,KAAxB;AAA+BC,QAAAA;AAA/B,OAA3C,CAAtE,CAAD,CAAnB;AACC;AACF,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,mBAAmB,EAAEO;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEX;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhCQD,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import AddStudent from './components/AddStudent'\nimport SearchFilter from './components/SearchFilter'\nimport { StudentList } from './components/StudentList'\nimport { useState } from 'react'\n\nfunction App() {\n  const [students, setStudents] = useState([])\n  const [filteredStudents, setFilteredStudents] = useState([])\n\n  const addStudent = (name, description, email, tags) =>{\n    const id = Math.floor(Math.random() * 10000) + 1\n    \n    const newStudent = {id, name, description, email, tags}\n    \n    setStudents([...students, newStudent])\n  }\n\n  const filterStudentsByTag = () =>{\n\n\n\n  }\n\n  const filterStudentsByDescription = (enteredText) =>{\n\n    if(enteredText){\n    setFilteredStudents(students.filter((item) => item.description.includes(enteredText)).map(({id, name, description, email, tags}) => ({id, name, description, email, tags})));\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchFilter updateByDescription={filterStudentsByDescription}/>\n      <AddStudent onAdd={addStudent}/>\n      <StudentList students={students}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}